{"version":3,"file":"static/js/485.8ed37042.chunk.js","mappings":"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","sources":["store/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  & + & {\n    margin-top: 16px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 24px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      margin-top: 26px;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 42px;\n  padding: 14px;\n\n  border: 1px solid #d4d7e3;\n  border-radius: 8px;\n  background-color: #f3f7fb;\n  font-size: 14px;\n\n  color: #162d3a;\n  transition: border-color 250ms ease-in-out;\n\n  &:focus {\n    border-color: #162d3a;\n    outline: transparent;\n  }\n\n  &::placeholder {\n    color: #8897ad;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 48px;\n    padding: 16px;\n\n    font-size: 16px;\n  }\n`;\n\nexport const Span = styled.span`\n  margin-bottom: 8px;\n\n  font-size: 14px;\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  width: 100%;\n  height: 44px;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: inherit;\n  letter-spacing: inherit;\n\n  color: #ffffff;\n  background-color: #162d3a;\n  border: 1px solid transparent;\n  border-radius: 12px;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  transition: background-color 250ms ease-in-out, transform 250ms ease-in-out;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n    padding: 16px;\n    margin-top: 24px;\n\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 26px;\n  }\n\n  ${props => {\n    if (!props.disabled) {\n      return `&:hover {\n        background-color: #0c1421;\n        transform: scale(1.01);\n  }`;\n    }\n  }}\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'store/contacts/selectors';\nimport { addContact } from 'store/contacts/operations';\nimport { Form, Label, Input, Span, Button } from './ContactForm.styled';\n\nconst ContactForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      toast.info(`${name} is already in contact list.`);\n      setName('');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n\n    onClose();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label>\n        <Span>Number</Span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          disabled={!name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 340px;\n    margin-bottom: 24px;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 388px;\n    margin-bottom: 26px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 42px;\n  padding: 14px;\n\n  border: 1px solid #d4d7e3;\n  border-radius: 8px;\n  background-color: #f3f7fb;\n  font-size: 14px;\n\n  color: #162d3a;\n  transition: border-color 250ms ease-in-out;\n\n  &:focus {\n    border-color: #162d3a;\n    outline: transparent;\n  }\n\n  &::placeholder {\n    color: #8897ad;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 48px;\n    padding: 16px;\n\n    font-size: 16px;\n  }\n`;\n","import { FilterWrapper, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'store/contacts/selectors';\nimport { setFilter } from 'store/contacts/filterSlice';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterWrapper>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find a contact by name...\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.currentTarget.value))}\n      />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #d4d7e3;\n  border-radius: 8px;\n  box-shadow: 4px 8px 4px 0px rgba(0, 0, 0, 0.25);\n  font-size: 16px;\n\n  transition: background-color 250ms ease-in-out, transform 250ms ease-in-out,\n    border-color 250ms ease-in-out;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(30, 74, 233, 0.2);\n    border-color: rgb(30, 74, 233, 0.6);\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 24px) / 2);\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 2 * 26px) / 3);\n  }\n`;\n\nexport const Name = styled.p`\n  max-width: 220px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 280px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 320px;\n  }\n`;\n\nexport const Number = styled.p`\n  margin-top: 8px;\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n\n  color: #162d3a;\n  background-color: transparent;\n  border: 1px solid transparent;\n  transition: color 250ms ease-in-out;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #0c1421;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Name, Number, Button } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operations';\nimport { RxCross1 } from 'react-icons/rx';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <Button\n        type=\"button\"\n        aria-label=\"delete a contact\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <RxCross1 size={20} />\n      </Button>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 26px;\n  }\n`;\n","import ContactListItem from '../ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'store/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const AddNewContactWrapper = styled.div`\n  padding-top: 24px;\n  padding-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 48px;\n    padding-bottom: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-bottom: 26px;\n  }\n`;\n\nexport const ContactListWrapper = styled.section`\n  padding-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 48px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  width: 40px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n\n  font-family: inherit;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.1666666667;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: #ffffff;\n  background-color: #162d3a;\n  border: 1px solid transparent;\n  border-radius: 12px;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  transition: background-color 250ms ease-in-out, transform 250ms ease-in-out;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #0c1421;\n    transform: scale(1.01);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 50px;\n    height: 50px;\n    font-size: 14px;\n    line-height: 1.14;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 1200;\n`;\n\nexport const ModalStyled = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 280px;\n  width: 100%;\n  max-height: calc(100vh - 80px);\n  padding: 20px;\n\n  background-color: #ffffff;\n  overflow-y: auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 404px;\n    width: 100%;\n    max-height: calc(100vh - 40px);\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 484px;\n    width: 100%;\n    padding: 48px;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Backdrop, ModalStyled } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handleEscKeyPress = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyPress);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalStyled>{children}</ModalStyled>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'store/contacts/operations';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'store/contacts/selectors';\nimport Loader from 'components/Loader';\nimport {\n  AddNewContactWrapper,\n  ContactListWrapper,\n  Button,\n} from './Contacts.styled';\nimport { BsPersonAdd } from 'react-icons/bs';\nimport Modal from 'components/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsShowModal(prevState => !prevState);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <AddNewContactWrapper>\n        <Button onClick={toggleModal}>\n          <BsPersonAdd size={40} />\n        </Button>\n      </AddNewContactWrapper>\n\n      {isShowModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm onClose={toggleModal} />\n        </Modal>\n      )}\n\n      <ContactListWrapper>\n        {isLoading && !error && <Loader />}\n\n        {!isLoading && !error && (\n          <>\n            <Filter />\n            {contacts.length > 0 && <ContactList />}\n          </>\n        )}\n      </ContactListWrapper>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","Label","Input","Span","Button","props","disabled","onClose","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","target","value","onSubmit","e","preventDefault","find","toast","addContact","type","pattern","title","required","onChange","FilterWrapper","placeholder","setFilter","currentTarget","Item","Name","Number","id","onClick","deleteContact","size","List","map","AddNewContactWrapper","ContactListWrapper","Backdrop","ModalStyled","modalRoot","document","querySelector","children","useEffect","handleEscKeyPress","code","window","addEventListener","removeEventListener","createPortal","isShowModal","setIsShowModal","toggleModal","prevState","fetchContacts","Loader","length"],"sourceRoot":""}