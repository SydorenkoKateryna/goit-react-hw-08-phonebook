{"version":3,"file":"static/js/786.6f9d7e33.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","store/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 40px;\n  padding: 6px 12px;\n  border: 1px solid #000000;\n  border-radius: 5px;\n  font-size: 14px;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  &:focus {\n    border-color: rgb(60, 60, 253);\n    outline: transparent;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100px;\n  height: 20px;\n  font-size: 14px;\n  font-weight: 700;\n  border: 1px solid #000000;\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  ${props => {\n    if (!props.disabled) {\n      return `&:hover {\n    background-color: rgb(60, 60, 253);\n    border-color: rgb(60, 60, 253);\n  }`;\n    }\n  }}\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'store/selectors';\nimport { addContact } from 'store/operations';\nimport { Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      setName('');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          disabled={!name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 40px;\n  padding: 6px 12px;\n  border: 1px solid #000000;\n  border-radius: 5px;\n  font-size: 14px;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  &:focus {\n    border-color: rgb(60, 60, 253);\n    outline: transparent;\n  }\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'store/selectors';\nimport { setFilter } from 'store/filterSlice';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n        />\n      </Label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Name = styled.p`\n  width: 150px;\n`;\n\nexport const Number = styled.p`\n  width: 120px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 70px;\n  height: 20px;\n\n  font-weight: 700;\n  border: 1px solid #000000;\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgb(60, 60, 253);\n    border-color: rgb(60, 60, 253);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Name, Number, Button } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/operations';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Name>{name}:</Name>\n      <Number>{number}</Number>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import ContactListItem from '../ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'store/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'store/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'store/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    //     <div\n    //     style={{\n    //       width: '400px',\n    //       marginLeft: 'auto',\n    //       marginRight: 'auto',\n    //       padding: '20px',\n    //       display: 'flex',\n    //       flexDirection: 'column',\n    //       alignItems: 'left',\n    //       gap: '20px',\n    //       borderRadius: '5px',\n    //       fontSize: '16px',\n    //       color: '#010101',\n    //       backgroundColor: '#ffffff',\n    //       boxShadow:\n    //         '0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2)',\n    //     }}\n    //   >\n    <main>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      {isLoading && !error && <b>Loading...</b>}\n\n      {!isLoading && !error && (\n        <>\n          <h2>Contacts</h2>\n          <Filter />\n          {contacts.length > 0 && <ContactList />}\n        </>\n      )}\n    </main>\n    //   </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","contact","toLowerCase","includes","Label","styled","Input","Button","props","disabled","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","target","onSubmit","e","preventDefault","alert","addContact","type","pattern","title","required","onChange","setFilter","currentTarget","Item","Name","Number","id","onClick","deleteContact","useEffect","fetchContacts"],"sourceRoot":""}